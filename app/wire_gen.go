// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package app

import (
	"context"
	"go.uber.org/zap"
	"google-calendar-to-notion/api/calendarapi"
	"google-calendar-to-notion/api/notionapi"
)

// Injectors from wire.go:

func InitApp(ctx context.Context, logger *zap.Logger, config *Config) (*App, func(), error) {
	calendarapiConfig := config.CalendarSettings
	client, cleanup, err := InitSecretManagerClient(ctx, logger)
	if err != nil {
		return nil, nil, err
	}
	service, err := InitGoogleCalendar(ctx, config, client, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	calendarapiClient := calendarapi.Client{
		Config:         calendarapiConfig,
		CalendarClient: service,
		Logger:         logger,
	}
	notionapiConfig := &config.NotionSettings
	notionapiClient, err := InitNotion(ctx, config, client, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	client2 := notionapi.Client{
		Config: notionapiConfig,
		Client: notionapiClient,
		Logger: logger,
	}
	app := &App{
		CalendarAPI: calendarapiClient,
		NotionAPI:   client2,
		Logger:      logger,
	}
	return app, func() {
		cleanup()
	}, nil
}
